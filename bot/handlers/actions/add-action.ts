import { driver } from '../../../database/db-driver';
import { ChatState, State } from '../../../database/entities/chat-state';
import { Store } from '../../../database/entities/product';
import { getStoreProvider } from '../../../store/provider';
import { Action, ActionContext } from '../types';

export async function addActionHandler(ctx: ActionContext) {
    const data = ctx.callbackQuery?.data;
    if (!data) {
        ctx.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ callbackQuery.');
        return;
    }
    const store = data.replace(`${Action.Add} `, '') as Store;

    if (ctx.chatState) {
        // –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
        await ctx.chatState.remove(driver);
    }

    await ChatState.create({ state: State.AddProduct, store, chatId: ctx.chatId }).insert(driver);

    ctx.deleteMessage();

    const storeProvider = getStoreProvider(store);
    const message = `‚åõ –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É —Å —Ç–æ–≤–∞—Ä–æ–º.\n\nüí° –ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏: ${storeProvider.exampleLink}`;
    ctx.reply(message, { disable_web_page_preview: true });
}
