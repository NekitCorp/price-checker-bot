import { driver } from '../../database/db-driver';
import { State } from '../../database/entities/chat-state';
import { Product } from '../../database/entities/product';
import { Subscription } from '../../database/entities/subscription';
import { getStoreProvider } from '../../store/provider';
import { getStoreExampleLink, getStoreLinkRegExp } from '../../utils/store';
import { Command, CommandContext } from './types';

export async function textHandler(ctx: CommandContext) {
    if (ctx.chatState?.state === State.AddProduct) {
        if (!getStoreLinkRegExp(ctx.chatState.store).test(ctx.message.text)) {
            const message = `‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞.
    
üí° –ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏: ${getStoreExampleLink(ctx.chatState.store)}`;
            ctx.reply(message);
        } else {
            const storeProvider = getStoreProvider(ctx.chatState.store);

            try {
                const data = await storeProvider.getData(ctx.message.text);

                const product = await Product.get(driver, { id: data.product.id });

                if (!product) {
                    await data.product.insert(driver);
                }

                await data.price.insert(driver);
                await Subscription.create({ chatId: ctx.chatId, productId: data.product.id }).insert(driver);

                const message = `‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ \`${data.product.id}\` —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /${Command.List}.`;

                ctx.reply(message, { parse_mode: 'Markdown' });
            } catch (error) {
                console.error(error);
                ctx.reply('üò≠ –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑...');
            }
        }

        await ctx.chatState.remove(driver);

        return;
    }

    // not found chat state
    ctx.replyWithSticker('CAACAgIAAxkBAAPhYneTKx_dcDOYQbazLwhEKAsV8LgAAvsUAAKEPslLcnZGpyqRn64kBA');
}
